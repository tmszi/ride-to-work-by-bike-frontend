---
name: Run tests

# Run tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: ${{ matrix.node-version }}

    concurrency:
      group:
        ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}-${{
        matrix.name }}
      cancel-in-progress: true

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [18.x]
        include:
          - name: '22.04'
            os: ubuntu-22.04
            config: ubuntu-22.04
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get app dependencies
        run: |
          .github/workflows/install_dependencies.sh

      - name: Get app JavaScript dependencies
        run: |
          yarn global add @quasar/cli npx
          yarn

      - name: Run component tests with Mozilla Firefox web browser
        run: |
          firefox --version
          npx cypress run --component --browser $(which firefox)

      - name: Run component tests with Google Chrome web browser
        run: |
          google-chrome-stable --version
          npx cypress run --component --browser $(which google-chrome-stable)

      - name: Run component tests with Microsoft Edge web browser
        run: |
          microsoft-edge --version
          npx cypress run --component --browser $(which microsoft-edge)

      - name: Run app web server in background for e2e tests
        run: |
          npx quasar dev &

      - name: Run e2e/unit tests with Mozilla Firefox web browser
        run: |
          firefox --version
          npx cypress run --e2e --browser $(which firefox)

      - name: Run e2e/unit tests with Google Chrome web browser
        run: |
          google-chrome-stable --version
          npx cypress run --e2e --browser $(which google-chrome-stable)

      - name: Run e2e/unit tests with Microsoft Edge web browser
        run: |
          microsoft-edge --version
          npx cypress run --e2e --browser $(which microsoft-edge)

      - name: Archive runned cypress tests result
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: cypress-tests
          path: test/*

  push-docker-img:
    runs-on: ubuntu-22.04
    needs: [build-and-test]

    outputs:
      dockerhub_image_version: ${{ steps.set_output.outputs.dockerhub_image_version }}

    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Docker image version
        run: |
          .github/workflows/get_docker_image_tag_number.sh \
          ${{ secrets.DOCKERHUB_REPO_OWNER }} ${{ secrets.DOCKERHUB_REPO_NAME }}

      - name: Create deployed_app_version.toml file with deployed app Docker image version
        run: |
          echo "version = ${{ env.DOCKERHUB_IMAGE_VERSION }}" > deployed_app_version.toml

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./docker/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_REPO_OWNER }}/${{ secrets.DOCKERHUB_REPO_NAME }}:${{ env.DOCKERHUB_IMAGE_VERSION }}

      - id: set_output
        run: |
          echo "dockerhub_image_version=${{ env.DOCKERHUB_IMAGE_VERSION }}" >> "$GITHUB_OUTPUT"

  bump-k8-ride-to-work-by-bike-frontend-app-docker-image-version:
    runs-on: ubuntu-22.04
    needs: [push-docker-img]

    steps:
      - name: Checkout k8 repository
        uses: actions/checkout@v3
        with:
          repository: auto-mat/k8s
          token: ${{ secrets.GH_PAT }}
          path: k8s

      - env:
          DOCKERHUB_IMAGE_VERSION: ${{ needs.push-docker-img.outputs.dockerhub_image_version }}

        run: |
          cd ./k8s
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          echo "DOCKERHUB_IMAGE_VERSION: ${DOCKERHUB_IMAGE_VERSION}"
          file ./manifests/ytt/ride-to-work-by-bike-frontend-test.yaml
          sed -i -e "2s/.*/#@ image = \"${{ secrets.DOCKERHUB_REPO_OWNER }}\/${{ secrets.DOCKERHUB_REPO_NAME }}:${DOCKERHUB_IMAGE_VERSION}\"/" ./manifests/ytt/ride-to-work-by-bike-frontend-test.yaml
          git commit -am "manifests/ytt: bump ride-to-work-by-bike-frontend-test app build image to version ${DOCKERHUB_IMAGE_VERSION}"
          git push
